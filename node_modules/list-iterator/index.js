function ListIterator (array) {
  if (array instanceof Array) {
    this.array = array;
  } else {
    throw new Error(array + ' is not an array');
  }
  this.cursor = 0;
  this.index = -1;
}

function NoSuchElementException () {
  throw new Error('No more elements in iteration');
}

function IllegalStateException () {
  throw new Error('Neither next() nor previous() have been called, or ' +
    'remove() or add() have been called after the last call to next() ' +
    'or previous()');
}

//http://docs.oracle.com/javase/7/docs/api/java/util/ListIterator.html#hasNext
ListIterator.prototype.hasNext = function () {
  return this.cursor !== this.array.length;
}

//http://docs.oracle.com/javase/7/docs/api/java/util/ListIterator.html#next
ListIterator.prototype.next = function () {
  var index = this.cursor;
  if (index < this.array.length) {
    this.cursor++;
    this.index = index;
    return this.array[index];
  } else {
    NoSuchElementException();
  }
}

//http://docs.oracle.com/javase/7/docs/api/java/util/ListIterator.html#hasPrevious
ListIterator.prototype.hasPrevious = function () {
  return this.cursor !== 0;
}

//http://docs.oracle.com/javase/7/docs/api/java/util/ListIterator.html#previous
ListIterator.prototype.previous = function () {
  var index = this.cursor - 1;
  if (index >= 0) {
    this.cursor = index;
    this.index = index;
    return this.array[index];
  } else {
    NoSuchElementException();
  }
}

//http://docs.oracle.com/javase/7/docs/api/java/util/ListIterator.html#nextIndex
ListIterator.prototype.nextIndex = function () {
  return this.cursor;
}

//http://docs.oracle.com/javase/7/docs/api/java/util/ListIterator.html#previousIndex
ListIterator.prototype.previousIndex = function () {
  return this.cursor - 1;
}

//http://docs.oracle.com/javase/7/docs/api/java/util/ListIterator.html#remove
ListIterator.prototype.remove = function () {
  if (this.index >= 0) {
    this.array.splice(this.index, 1);
    this.cursor = this.index;
    this.index = -1;
  } else {
    IllegalStateException();
  }
}

//http://docs.oracle.com/javase/7/docs/api/java/util/ListIterator.html#set
ListIterator.prototype.set = function (object) {
  if (this.index >= 0) {
    this.array[this.index] = object;
  } else {
    IllegalStateException();
  }
}

//http://docs.oracle.com/javase/7/docs/api/java/util/ListIterator.html#add
ListIterator.prototype.add = function (object) {
  this.array.splice(this.cursor, 0, object);
  this.cursor++;
  this.index = -1;
}

module.exports = ListIterator;
